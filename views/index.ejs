<!DOCTYPE html>
<html>
<head>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/luxon@1.27.0"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1.0.0"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@2.0.0"></script>
  <script>
    let HOST = location.origin.replace(/^http/, 'ws')
    console.log("wss", HOST)
    let ws = new WebSocket(HOST);
    let el;
    var result1;

    const onRefresh = chart => {
      const now = Date.now();
      chart.data.datasets[0].data.push({
          x: now,
          y: result1.x
      })
      chart.data.datasets[1].data.push({
          x: now,
          y: result1.y
      })
      chart.data.datasets[2].data.push({
          x: now,
          y: result1.z
      })
    };
    ws.onmessage = (event) => {
      let result = JSON.parse(event.data)
      console.log('result', result);
      result1 = result
    };
  </script>
</head>

<body>

  <h1>Visualize data</h1>
  <div class="chart-container" style="position: relative; height:40vh; width:80vw">
      <canvas id="myChart"></canvas>
  </div>
  
  <script>
    
  
    const data = {
      datasets: [
        {
          label: 'X',
          backgroundColor: 'rgb(255, 153, 102)',
          borderColor: 'rgb(255, 153, 102)',
          borderDash: [8, 4],
          data: []
        },
        {
          label: 'Y',
          backgroundColor: 'rgb(51, 102, 255)',
          borderColor: "rgb(51, 102, 255)",
          cubicInterpolationMode: 'monotone',
          data: []
        },
        {
          label: 'Z',
          backgroundColor: 'rgb(255, 0, 255)',
          borderColor: "rgb(255, 0, 255)",
          cubicInterpolationMode: 'monotone',
          data: []
        },
      ]
    };
  
    const config = {
      type: 'line',
      data: data,
      options: {
        scales: {
          x: {
            type: 'realtime',
            realtime: {
              duration: 20000,
              refresh: 300,
              delay: 1000,
              onRefresh: onRefresh
            }
          },
          y: {
            title: {
              display: true,
              text: 'Value'
            }
          }
        },
        interaction: {
          intersect: false
        }
      }
    };
    
    let myChart = new Chart(
      document.getElementById('myChart'),
      config
    );
  </script>
</body>
</html>
